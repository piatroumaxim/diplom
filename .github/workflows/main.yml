name: diplom project TMS
on:
  release:
    types: [published]


jobs:
  build:
    name : ci
    runs-on: ubuntu-latest
    steps:
      - name: start ci notification 
        run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="${MESSAGE}" >> /dev/null
        env:
          MESSAGE: "${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has started"
      - name: checkout code
        uses: actions/checkout@v2
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REP_API: api
          REP_MICR1: courses
          REP_MICR2: bcknd
          IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
        run: |
          docker build -t $ECR_REGISTRY/$REP_API:$IMAGE_TAG ./api
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="build image $ECR_REGISTRY/$REP_API:$IMAGE_TAG success" >> /dev/null
          docker push $ECR_REGISTRY/$REP_API:$IMAGE_TAG
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="push image $ECR_REGISTRY/$REP_API:$IMAGE_TAG success" >> /dev/null
          docker build -t $ECR_REGISTRY/$REP_MICR1:$IMAGE_TAG ./micr1
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="build image $ECR_REGISTRY/$REP_MICR1:$IMAGE_TAG success" >> /dev/null
          docker push $ECR_REGISTRY/$REP_MICR1:$IMAGE_TAG
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="push image $ECR_REGISTRY/$REP_MICR1:$IMAGE_TAG success" >> /dev/null
          docker build -t $ECR_REGISTRY/$REP_MICR2:$IMAGE_TAG ./micr2
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="build image $ECR_REGISTRY/$REP_MICR2:$IMAGE_TAG success" >> /dev/null
          docker push $ECR_REGISTRY/$REP_MICR2:$IMAGE_TAG
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="push image $ECR_REGISTRY/$REP_MICR2:$IMAGE_TAG success" >> /dev/null
      - name: end ci notification 
        run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="${MESSAGE}" >> /dev/null
        env:
          MESSAGE: "${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has finished succesfully."
  deploy:
    name: CD
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    
    - name: start cd notification 
      run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="${MESSAGE}" >> /dev/null
      env:
        MESSAGE: "${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has started"
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
    
    - name: Terraform Init
      id: init
      
      run: | 
        cd ./terraform
        terraform init

    - name: Terraform apply
      id: apply
      env:
        IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
      run: |
        cd ./terraform
        terraform apply -var="tag_version=$IMAGE_TAG" -auto-approve
      
    - name: end cd notification 
      run: curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} -d text="${MESSAGE}" >> /dev/null
      env:
        MESSAGE: "${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has finished succesfully"
  
