name: workflow for diplom project
on:
  release:
    types: [published]
#   push:
#     branches: [ master ]
#     tags:
#       - "*"
#   pull_request:
#     branches: [ master ]

# jobs:
#   build:
#     name : ci
#     runs-on: ubuntu-latest
#     steps:
#       - name: checkout code
#         uses: actions/checkout@v2
#       - name: Get the version
#         id: get_version
#         run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}
          
#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1
        
#       - name: Build, tag, and push image to Amazon ECR
#         id: build-image
#         env:
#           ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#           REP_API: api
#           REP_MICR1: courses
#           REP_MICR2: bcknd
#           IMAGE_TAG: ${{ steps.get_version.outputs.VERSION }}
#         run: |
#           docker build -t $ECR_REGISTRY/$REP_API:$IMAGE_TAG ./api
#           docker push $ECR_REGISTRY/$REP_API:$IMAGE_TAG
#           docker build -t $ECR_REGISTRY/$REP_MICR1:$IMAGE_TAG ./micr1
#           docker push $ECR_REGISTRY/$REP_MICR1:$IMAGE_TAG
#           docker build -t $ECR_REGISTRY/$REP_MICR2:$IMAGE_TAG ./micr2
#           docker push $ECR_REGISTRY/$REP_MICR2:$IMAGE_TAG
  deploy:
    name: CD
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    
    - name: Terraform Init
      id: init
      run: | 
        ls
        cd ./terraform
        terraform init

      
#     - name: Terraform apply
#       id: apply
#       run: ./terraform/terraform apply -var="tag_version=$IMAGE_TAG" -auto-approve
    
  
